policy_module(hirte, 1.0.0)

########################################
#
# Declarations
#

type hirte_t;
type hirte_exec_t;
init_daemon_domain(hirte_t, hirte_exec_t)

type hirte_agent_t;
type hirte_agent_exec_t;
init_daemon_domain(hirte_agent_t, hirte_agent_exec_t)

type hirte_port_t;
corenet_port(hirte_port_t)

permissive hirte_t;
permissive hirte_agent_t;

########################################
#
# hirte local policy
#
allow hirte_t self:fifo_file rw_fifo_file_perms;
allow hirte_t self:unix_stream_socket create_stream_socket_perms;

domain_use_interactive_fds(hirte_t)

files_read_etc_files(hirte_t)

miscfiles_read_localization(hirte_t)

allow hirte_t port_type:tcp_socket name_bind;
allow hirte_t self:capability net_bind_service;
allow hirte_t self:tcp_socket create_stream_socket_perms;
allow hirte_t self:unix_dgram_socket create_socket_perms;

corenet_tcp_bind_generic_node(hirte_t)

dbus_acquire_svc_system_dbusd(hirte_t)
dbus_system_bus_client(hirte_t)

kernel_dgram_send(hirte_t)

logging_send_syslog_msg(hirte_t)
logging_read_syslog_pid(hirte_t)
logging_write_syslog_pid_socket(hirte_t)

########################################
#
# hirte_agent local policy
#
allow hirte_agent_t self:fifo_file rw_fifo_file_perms;
allow hirte_agent_t self:unix_stream_socket create_stream_socket_perms;
allow hirte_agent_t self:unix_dgram_socket create_socket_perms;

kernel_dgram_send(hirte_agent_t)

domain_use_interactive_fds(hirte_agent_t)

files_read_etc_files(hirte_agent_t)

miscfiles_read_localization(hirte_agent_t)

logging_send_syslog_msg(hirte_agent_t)
logging_read_syslog_pid(hirte_agent_t)
logging_write_syslog_pid_socket(hirte_agent_t)

allow hirte_agent_t self:tcp_socket create_stream_socket_perms;
allow hirte_agent_t hirte_port_t:tcp_socket name_connect;

dbus_acquire_svc_system_dbusd(hirte_agent_t)
dbus_system_bus_client(hirte_agent_t)

init_status(hirte_agent_t)

rhcs_stream_connect_haproxy(hirte_agent_t)

gen_require(`
       type haproxy_t, haproxy_var_lib_t;
')

stream_connect_pattern(hirte_agent_t, haproxy_var_lib_t, haproxy_var_lib_t, haproxy_t)
